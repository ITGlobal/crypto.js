{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap af33dc999c797a898b9b","webpack:///./index.ts","webpack:///./CryptoClient.ts","webpack:///./internals/Deferred.ts","webpack:///./internals/helpers.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"nsd\"] = factory();\n\telse\n\t\troot[\"nsd\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap af33dc999c797a898b9b","export * from './ISignatureApplet';\r\nexport * from './CryptoClient';\r\n\n\n\n// WEBPACK FOOTER //\n// ../~/tslint-loader!./index.ts","import {\r\n    ISignatureApplet,\r\n    IUnpackResult,\r\n    IPackOptions,\r\n    IPromise,\r\n    ICrutchBlob,\r\n    ICrutchFile,\r\n    ICertificate,\r\n    ISignOptions\r\n} from './ISignatureApplet';\r\nimport {Deferred} from './internals/Deferred';\r\nimport {send, getOptions, toCrutchBlob} from './internals/helpers';\r\n\r\nexport class CryptoClient implements ISignatureApplet {\r\n    private readonly settings: ICryptoClientOptions;\r\n    private readonly baseUrl: string;\r\n    private sessionPromise: IPromise<ICryptoSession>;\r\n\r\n    static settings: ICryptoClientOptions = {\r\n        port: 48737,\r\n        useFileApi: false,\r\n        transformPromise: promise => promise,\r\n        noSsl: false\r\n    };\r\n\r\n    /**\r\n     * Текущая открытая сессия\r\n     * @readonly\r\n     */\r\n    session: ICryptoSession = null;\r\n\r\n    constructor(options?: ICryptoClientOptions) {\r\n        const {noSsl, port} = this.settings = getOptions(options, CryptoClient.settings);\r\n        this.baseUrl = (noSsl ? 'http' : 'https') + '://127.0.0.1:' + port + '/api/csp';\r\n    }\r\n\r\n    /**\r\n     * Возвращает список установленных справочников сертификатов: 'GOST' и/или 'RSA'\r\n     */\r\n    getTypes(): IPromise<string[]> {\r\n        const promise = send(this.baseUrl + '/types', null);\r\n        return this.settings.transformPromise(promise);\r\n    }\r\n\r\n    /**\r\n     * Открывает сессию. Пытается открыть существующую сессию, если указан {@type ICryptoSessionId индентификатор}.\r\n     * Затем пытается открыть новую сессию, если указаны {@type ICryptoSessionParams параметры}.\r\n     * @param args идентификатор и/или параметры сессии\r\n     * @returns открытая сессия\r\n     */\r\n    open(args: ICryptoSessionId|ICryptoSessionParams): IPromise<ICryptoSession> {\r\n        this.session = null;\r\n        const promise = this.sessionPromise = send(this.baseUrl + '/open', args, res => {\r\n            return this.session = {\r\n                id: res.id,\r\n                type: res.type,\r\n                profile: res.profile\r\n            };\r\n        });\r\n        promise.then(null, () => {\r\n            this.sessionPromise = null;\r\n        });\r\n        return this.settings.transformPromise(promise);\r\n    }\r\n\r\n    /**\r\n     * Закрывает сессию\r\n     * @returns закрытая сессия\r\n     */\r\n    close(): IPromise<ICryptoSession> {\r\n        return this.send('/close', null, res => {\r\n            this.sessionPromise = null;\r\n            this.session = null;\r\n            return {\r\n                id: res.id,\r\n                type: res.type,\r\n                profile: res.profile\r\n            };\r\n        });\r\n    }\r\n\r\n    pack(files: File[]|ICrutchFile[], options: IPackOptions): IPromise<Blob|ICrutchBlob> {\r\n        const arr: ICrutchFile[] = new Array(files.length);\r\n        const deferred = new Deferred();\r\n\r\n        const sendRequest = () => {\r\n            this.send('/pack', {\r\n                files: arr,\r\n                options: options\r\n            }).then(x => deferred.resolve(x), x => deferred.reject(x));\r\n        };\r\n\r\n        const resolveFile = ((cur, len) => {\r\n            return () => {\r\n                if (++cur !== len) return;\r\n                sendRequest();\r\n            };\r\n        })(0, files.length);\r\n\r\n        let rejectFile = (err) => {\r\n            rejectFile = () => {};\r\n            deferred.reject(err);\r\n        };\r\n\r\n        (<any[]>files).forEach((file, index) => {\r\n            toCrutchBlob(file).then(b => {\r\n                arr[index] = {\r\n                    name: file.name,\r\n                    content: b.content,\r\n                    encoding: b.encoding\r\n                };\r\n                resolveFile();\r\n            }, rejectFile);\r\n        });\r\n\r\n        return this.settings.transformPromise(deferred);\r\n    }\r\n\r\n    unpack(buffer: Blob|ICrutchBlob): IPromise<IUnpackResult> {\r\n        const deferred = new Deferred();\r\n\r\n        toCrutchBlob(buffer).then(b => {\r\n            return this.send('/unpack', {\r\n                data: b\r\n            }).then(x => deferred.resolve(x), x => deferred.reject(x));\r\n        }, x => deferred.reject(x));\r\n\r\n        return this.settings.transformPromise(deferred);\r\n    }\r\n\r\n    getCerts(): IPromise<ICertificate[]> {\r\n        return this.send('/certs', null);\r\n    }\r\n\r\n    sign(data: Blob|ICrutchBlob, options?: ISignOptions): IPromise<Blob|ICrutchBlob> {\r\n        const deferred = new Deferred();\r\n\r\n        toCrutchBlob(data).then(b => {\r\n            return this.send('/sign', {\r\n                data: b,\r\n                options: getOptions(options, {\r\n                    pkcs7: false,\r\n                    detached: false,\r\n                    sendCertificate: false,\r\n                    sendChain: false\r\n                })\r\n            }).then(x => deferred.resolve(x), x => deferred.reject(x));\r\n        }, x => deferred.reject(x));\r\n\r\n        return this.settings.transformPromise(deferred);\r\n    }\r\n\r\n    getHeadCert(): IPromise<ICertificate> {\r\n        return this.send('/head', null);\r\n    }\r\n\r\n    private send<T>(path: string, data: any, success?: (res: any) => T): IPromise<T> {\r\n        return this.whenSession(() => {\r\n            if (data == null) {\r\n                data = this.session.id;\r\n            } else {\r\n                data.id = this.session.id;\r\n            }\r\n            return send(this.baseUrl + path, data, success);\r\n        });\r\n    }\r\n\r\n    private whenSession<T>(func: () => IPromise<T>): IPromise<T> {\r\n        const deferred = new Deferred();\r\n\r\n        if (this.sessionPromise) {\r\n            this.sessionPromise.then(() => {\r\n                func().then(x => deferred.resolve(x), x => deferred.reject(x), x => deferred.notify(x));\r\n            }, noSession);\r\n        } else {\r\n            noSession();\r\n        }\r\n\r\n        function noSession() {\r\n            deferred.reject({\r\n                code: 'E_NO_SESSION',\r\n                message: 'There is no active session'\r\n            });\r\n        }\r\n\r\n        return this.settings.transformPromise(deferred);\r\n    }\r\n}\r\n\r\nexport interface ICryptoClientOptions {\r\n    /**\r\n     * Порт крипто-сервиса\r\n     * @default 48737\r\n     */\r\n    port?: number;\r\n\r\n    /**\r\n     * Использовать объекты File API: Blob, File - в результатах методов\r\n     * @default false\r\n     * @todo реализовать опцию\r\n     */\r\n    useFileApi?: boolean;\r\n\r\n    /**\r\n     * Функция преобразования объектов {@type IPromise}\r\n     * @default identity функция, возвращающая первый параметр\r\n     */\r\n    transformPromise?: <T>(promise: IPromise<T>) => IPromise<T>;\r\n\r\n    /**\r\n     * Делать запросы к серверу по HTTP\r\n     * @default false\r\n     */\r\n    noSsl?: boolean;\r\n}\r\n\r\n/**\r\n * Идентификатор сессии\r\n */\r\nexport interface ICryptoSessionId {\r\n    /**\r\n     * Идентификатор\r\n     */\r\n    id: string;\r\n}\r\n\r\n/**\r\n * Параметры сессии\r\n */\r\nexport interface ICryptoSessionParams {\r\n    /**\r\n     * Тип криптографии: 'GOST' или 'RSA'\r\n     */\r\n    type: string;\r\n\r\n    /**\r\n     * Профиль\r\n     * @default 'My'\r\n     */\r\n    profile?: string;\r\n}\r\n\r\n/**\r\n * Сессия\r\n */\r\nexport interface ICryptoSession extends ICryptoSessionId {\r\n    id: string;\r\n    type: string;\r\n    profile: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../~/tslint-loader!./CryptoClient.ts","import {IPromise, IError, IProgress} from '../ISignatureApplet';\r\n\r\nexport class Deferred<TResult> implements IPromise<TResult> {\r\n    protected handlers: Array<Function>[] = [];\r\n    protected result: any;\r\n    protected resolution: number = -1;\r\n\r\n    then(\r\n        done: (result: TResult) => any,\r\n        fail?: (error: IError) => any,\r\n        progress?: (progress: IProgress) => any\r\n    ): any {\r\n        this.handlers.push([done, fail, progress]);\r\n        if (this.resolution < 0) return;\r\n        this.handle(this.resolution);\r\n    }\r\n\r\n    resolve(result: TResult): void {\r\n        this.result = result;\r\n        this.handle(this.resolution = 0);\r\n    }\r\n\r\n    reject(error: IError): void {\r\n        this.result = error;\r\n        this.handle(this.resolution = 1);\r\n    }\r\n\r\n    notify(progress: IProgress): void {\r\n        for (let i = 0; i < this.handlers.length; ++i) {\r\n            const handler = this.handlers[i][2];\r\n            if (handler) handler.call(null, progress);\r\n        }\r\n    }\r\n\r\n    protected handle(funcIndex: number): void {\r\n        while (this.handlers.length) {\r\n            const handler = this.handlers.shift()[funcIndex];\r\n            if (handler) handler.call(null, this.result);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../~/tslint-loader!./internals/Deferred.ts","import {IPromise, ICrutchBlob} from '../ISignatureApplet';\r\nimport {Deferred} from './Deferred';\r\n\r\n/**\r\n * Конвертирует {@type Blob} в строку {@type ICrutchBlob}, строку оставляет как есть\r\n * @param data\r\n */\r\nexport function toCrutchBlob(data: Blob|ICrutchBlob): IPromise<ICrutchBlob> {\r\n    if (window['Blob'] && data instanceof Blob) {\r\n        return blobToCrutchBlob(<Blob>data);\r\n    }\r\n    const deferred = new Deferred();\r\n    deferred.resolve(data);\r\n    return deferred;\r\n}\r\n\r\nfunction blobToCrutchBlob(blob: Blob): IPromise<ICrutchBlob> {\r\n    const deferred = new Deferred<ICrutchBlob>();\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = function() {\r\n        const str: string = (this.result || '').replace(/^data:(.{0,99},)?/, '');\r\n        deferred.resolve({\r\n            content: str,\r\n            encoding: 'base64'\r\n        });\r\n    };\r\n\r\n    reader.onerror = function() {\r\n        deferred.reject({\r\n            code: 'E_INVALID_DATA',\r\n            message: 'Cannot convert Blob to base64',\r\n            args: {\r\n                originalError: this.error\r\n            }\r\n        });\r\n    };\r\n\r\n    reader.readAsDataURL(blob);\r\n\r\n    return deferred;\r\n}\r\n\r\nexport function send<T>(url: string, data: any, success?: (res: any) => T): IPromise<T> {\r\n    const deferred = new Deferred();\r\n    try {\r\n        const xhr = new XHR();\r\n\r\n        xhr.onload = () => {\r\n            const response = JSON.parse(xhr.responseText);\r\n            const xhrStatus = response.status;\r\n            const res = response.content;\r\n\r\n            if (xhrStatus > 0 && xhrStatus < 400) {\r\n                deferred.resolve(success ? success(res) : res);\r\n            } else {\r\n                deferred.reject(res);\r\n            }\r\n        };\r\n        xhr.onerror = () => {\r\n            deferred.reject({\r\n                code: 'E_CONNECTION_ERROR',\r\n                message: 'Cannot connect to server'\r\n            });\r\n        };\r\n\r\n        xhr.open('POST', url);\r\n        xhr.send(JSON.stringify(data));\r\n    } catch (e) {\r\n        deferred.reject({\r\n            code: 'E_CONNECTION_ERROR',\r\n            message: e.message\r\n        });\r\n    }\r\n    return deferred;\r\n}\r\n\r\nexport function getOptions<T>(vals: T, defs: T): T {\r\n    const opts = {};\r\n    vals = vals || <T>{};\r\n\r\n    Object.keys(defs).forEach(key => {\r\n        const val = vals[key];\r\n        opts[key] = val === undefined ? defs[key] : val;\r\n    });\r\n\r\n    return <T>opts;\r\n}\r\n\r\ndeclare class XDomainRequest extends XMLHttpRequest { }\r\nconst XHR = /MSIE [89]/i.test(navigator.userAgent) ? XDomainRequest : XMLHttpRequest;\r\n\n\n\n// WEBPACK FOOTER //\n// ../~/tslint-loader!./internals/helpers.ts"],"sourceRoot":""}